{"version":3,"sources":["images/loading.jpg","components/Header/Header.tsx","components/Home/Home.tsx","components/NotFoundPage/NotFoundPage.tsx","components/CategoriesList/CategoriesListData.ts","api/api.ts","components/Button/Button.tsx","components/Input/Input.tsx","components/EntityInfo/EntityInfoData.ts","components/EntityInfo/EntityInfo.tsx","components/EntitiesList/EntitiesList.tsx","components/EntitiesList/ListToShow.tsx","components/Content/Content.tsx","components/CategoriesList/CategoriesList.tsx","App.tsx","index.tsx"],"names":["module","exports","Header","className","id","to","exact","Home","NotFoundPage","categoriesData","title","getData","type","a","currentList","currentPage","nextPage","fetch","then","respond","json","response2","push","results","next","Button","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","nextOrder","get","onClick","set","toString","Input","query","useState","visibleQuery","setVisibleQuery","prepareQueryToUpdate","useCallback","debounce","newQuery","delete","placeholder","value","onChange","event","target","peopleEntity","field","filmEntity","planetsEntity","speciesEntity","vehicleEntity","starshipEntity","EntityInfo","categoryList","currentCategory","useParams","currentEntity","entity","entityToShow","find","nameForRoute","name","replace","titleForRoute","map","EntitiesToShow","person","key","uuid","EntitiesList","isLoading","currentPath","queryFilter","querySortOrder","reversedList","sortedList","reverse","reverseList","list","path","sort","entityA","entityB","localeCompare","sortList","people","pattern","RegExp","filter","test","model","filterList","src","loading","alt","length","item","Content","setIsLoading","currentTitle","setCurrentTitle","categoryContent","setCategoryContent","titleAdaptive","toLowerCase","fetchData","titleToGet","peopleFromServer","useEffect","CategoriesList","category","App","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77b7a91a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.b8a7f631.jpg\";","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\n\nexport const Header: FC = () => (\n  <header className=\"center\">\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\" exact>Home page</NavLink>\n          </li>\n          <li>\n            <NavLink className=\"nav-link\" to=\"/categories\" exact>Categories page</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n","import React, { FC } from 'react';\n\nimport './Home.css';\n\nexport const Home: FC = () => (\n  <h1 className=\"heading\">Home page</h1>\n);\n","import React, { FC } from 'react';\n\nimport './NotFoundPage.css';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"heading\">Page not found</h1>\n);\n","interface CategoriesData {\n  title: string;\n}\n\nexport const categoriesData: CategoriesData[] = [\n  { title: 'People' },\n  { title: 'Planets' },\n  { title: 'Films' },\n  { title: 'Species' },\n  { title: 'Vehicles' },\n  { title: 'Starships' },\n];\n","export const getData = async <T>( type: string ): Promise<T[]> => {\n  const currentList = [];\n  let currentPage = 1;\n  let nextPage = 'exists';\n\n  if (type) {\n    while(nextPage) {\n      const response2 = await fetch(`http://swapi.dev/api/${type}/?page=${currentPage}`).then(respond => respond.json());\n      currentList.push(...response2.results)\n      currentPage++;\n      nextPage = response2.next;\n    }\n  }\n\n\n  return currentList;\n};","import React, { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport const Button: FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const currentOrder = searchParams.get('sortOrder');\n  const nextOrder = currentOrder === 'sorted' ? 'reverse' : 'sorted';\n\n  const handleSort = () => {\n    searchParams.set('sortOrder', nextOrder);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  return (\n    <button\n      className=\"btn btn-success\"\n      type=\"button\"\n      onClick={handleSort}\n    >\n      Sort\n    </button>\n  );\n}\n","import React, { FC, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '../Button/Button';\n\nimport './Input.css';\n\nexport const Input: FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n\n  const [visibleQuery, setVisibleQuery] = useState<string>(query);\n\n  const prepareQueryToUpdate = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 500),\n    [],\n  );\n\n  const handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setVisibleQuery(value);\n    prepareQueryToUpdate(value);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <input\n        className=\"form-control\"\n        placeholder=\"Type name here\"\n        type=\"text\"\n        value={visibleQuery}\n        onChange={handleQueryUpdate}\n      />\n      <Button />\n    </div>\n  );\n};\n","import { StarwarsEntitiesInterface } from '../../interfaces';\n\n\n\nexport const peopleEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'birth_year',\n    field: 'birth_year'\n  },\n  {\n    title: 'gender',\n    field: 'gender'\n  },\n  {\n    title: 'Eye color',\n    field: 'eye_color'\n  },\n  {\n    title: 'Hair color',\n    field: 'hair_color'\n  },\n  {\n    title: 'Skin color',\n    field: 'skin_color'\n  },\n  {\n    title: 'Height',\n    field: 'height'\n  },\n  {\n    title: 'Mass',\n    field: 'mass'\n  },\n];\n\nexport const filmEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'Episode id',\n    field: 'episode_id'\n  },\n  {\n    title: 'Opening crawl',\n    field: 'opening_crawl'\n  },\n  {\n    title: 'Director',\n    field: 'director'\n  },\n  {\n    title: 'Producer',\n    field: 'producer'\n  },\n  {\n    title: 'Release date',\n    field: 'release_date'\n  },\n];\n\nexport const planetsEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'Diameter',\n    field: 'diameter'\n  },\n  {\n    title: 'Rotation period',\n    field: 'rotation_period'\n  },\n  {\n    title: 'Orbital period',\n    field: 'orbital_period'\n  },\n  {\n    title: 'Gravity',\n    field: 'gravity'\n  },\n  {\n    title: 'Population',\n    field: 'population'\n  },\n  {\n    title: 'Climate',\n    field: 'climate'\n  },\n  {\n    title: 'Terrain',\n    field: 'terrain'\n  },\n  {\n    title: 'Surface water',\n    field: 'surface_water'\n  },\n];\n\nexport const speciesEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'Classification',\n    field: 'classification'\n  },\n  {\n    title: 'Designation',\n    field: 'designation'\n  },\n  {\n    title: 'Average lifespan',\n    field: 'average_lifespan'\n  },\n  {\n    title: 'Average height',\n    field: 'average_height'\n  },\n  {\n    title: 'Eye color',\n    field: 'eye_colors'\n  },\n  {\n    title: 'Hair color',\n    field: 'hair_colors'\n  },\n  {\n    title: 'Skin color',\n    field: 'skin_colors'\n  },\n  {\n    title: 'Language',\n    field: 'language'\n  },\n];\n\nexport const vehicleEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'Model',\n    field: 'model'\n  },\n  {\n    title: 'Vehicle class',\n    field: 'vehicle_class'\n  },\n  {\n    title: 'Manufacturer',\n    field: 'manufacturer'\n  },\n  {\n    title: 'Length',\n    field: 'length'\n  },\n  {\n    title: 'Cost in credits',\n    field: 'cost_in_credits'\n  },\n  {\n    title: 'Crew',\n    field: 'crew'\n  },\n  {\n    title: 'Passengers',\n    field: 'passengers'\n  },\n  {\n    title: 'Max atmosphering speed',\n    field: 'max_atmosphering_speed'\n  },\n  {\n    title: 'Consumables',\n    field: 'consumables'\n  },\n  {\n    title: 'Cargo_capacity',\n    field: 'cargo_capacity'\n  },\n];\n\nexport const starshipEntity: StarwarsEntitiesInterface[] = [\n  {\n    title: 'Model',\n    field: 'model'\n  },\n  {\n    title: 'Starship class',\n    field: 'starship_class'\n  },\n  {\n    title: 'Manufacturer',\n    field: 'manufacturer'\n  },\n  {\n    title: 'Length',\n    field: 'length'\n  },\n  {\n    title: 'Cost in credits',\n    field: 'cost_in_credits'\n  },\n  {\n    title: 'Crew',\n    field: 'crew'\n  },\n  {\n    title: 'Passengers',\n    field: 'passengers'\n  },\n  {\n    title: 'Max atmosphering speed',\n    field: 'max_atmosphering_speed'\n  },\n  {\n    title: 'Consumables',\n    field: 'consumables'\n  },\n  {\n    title: 'Cargo_capacity',\n    field: 'cargo_capacity'\n  },\n  {\n    title: 'Hyperdrive rating',\n    field: 'hyperdrive_rating'\n  },\n  {\n    title: 'MGLT',\n    field: 'MGLT'\n  },\n];\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StarwarsTypes, StarwarsEntitiesInterface } from '../../interfaces';\nimport { uuid } from 'uuidv4';\nimport { \n  peopleEntity, \n  filmEntity, \n  planetsEntity,\n  speciesEntity,\n  vehicleEntity,\n  starshipEntity\n} from './EntityInfoData';\n\nimport './EntityInfo.css';\n\ninterface EntityInfoProps {\n  categoryList: StarwarsTypes[];\n}\n\ninterface MatchParams {\n  title: string;\n  entity: string;\n}\n\nexport const EntityInfo: FC<EntityInfoProps> = ({ categoryList }) => {\n  const currentCategory = useParams<MatchParams>().title;\n  const currentEntity = useParams<MatchParams>().entity;\n\n  const entityToShow = categoryList.find(entity => {\n    const nameForRoute = entity.name && entity.name.replace(/\\s/g, '-');\n    const titleForRoute = entity.title && entity.title.replace(/\\s/g, '-');\n    return currentEntity === nameForRoute || currentEntity === titleForRoute;\n})\n\n  return (\n    <div className=\"entity__info\">\n      {entityToShow && \n      <h2 className=\"entity__heading\">\n        {entityToShow.name || entityToShow.title}\n      </h2>}\n      <ul className=\"entity__list\">\n      {currentEntity && categoryList.map(entity => {\n        const nameForRoute = entity.name && entity.name.replace(/\\s/g, '-');\n        const titleForRoute = entity.title && entity.title.replace(/\\s/g, '-');\n\n        if (currentEntity === nameForRoute || currentEntity === titleForRoute) {\n          let EntitiesToShow: StarwarsEntitiesInterface[] = [];\n          switch (currentCategory) {\n            case 'People':\n              EntitiesToShow = peopleEntity;\n              break;\n            case 'Films':\n              EntitiesToShow = filmEntity;\n              break;\n            case 'Planets':\n              EntitiesToShow = planetsEntity;\n              break;\n            case 'Species':\n              EntitiesToShow = speciesEntity;\n              break;\n            case 'Vehicles':\n              EntitiesToShow = vehicleEntity;\n              break;\n            default:\n              EntitiesToShow = starshipEntity; // for Starship\n            }\n            \n\n            return EntitiesToShow.map(person => {\n              return (\n                <li\n                  key={uuid()}\n                  className=\"entity__item\"\n                >\n                    <span className=\"entity__title\">{`${person.title}:`}</span>\n                    <span className=\"entity__value\">{`${entity[person.field]}`}</span> \n                </li>\n              )\n            }); // I know it could be better, but I didn't have time for refactoring\n          }})}\n      </ul>\n    </div>\n  );\n} ","import React, { FC } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { StarwarsTypes } from '../../interfaces';\nimport { filterList, sortList, reverseList } from './ListToShow';\nimport loading from '../../images/loading.jpg';\nimport { EntityInfo } from '../EntityInfo/EntityInfo'\n\nimport './EntitiesList.css';\n\ninterface EntitiesListProps {\n  categoryList: StarwarsTypes[];\n  isLoading: boolean;\n}\n\ninterface MatchParams {\n  title: string;\n}\n\nexport const EntitiesList: FC<EntitiesListProps> = ({ categoryList, isLoading }) => {\n  const currentPath = useParams<MatchParams>().title;\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const queryFilter = searchParams.get('query') || '';\n  const querySortOrder = searchParams.get('sortOrder') || '';\n\n  const filteredList = filterList(categoryList, queryFilter, currentPath);\n  const sortedList = sortList(filteredList, querySortOrder, currentPath)\n  const reversedList = reverseList(sortedList, querySortOrder)\n\n  return (\n    <div className=\"entities\">\n      {isLoading && \n        <div className=\"entities__image-wrapper\">\n          <img \n            className=\"entities__image\"\n            src={loading} \n            alt=\"loading\" \n          />\n        </div>\n      }\n\n      {categoryList.length !== 0 && (\n        <>\n          <h2 className=\"entities__heading\">Please, choose one to get more information</h2>\n          <ul className=\"entities__list\">\n            {reversedList.map(item => {\n              const nameForRoute = item.name && item.name.replace(/\\s/g, '-');\n              const titleForRoute = item.title && item.title.replace(/\\s/g, '-');\n              return (\n                <li \n                  key={item.name || item.title}\n                  className=\"entities__item\"\n                >\n                  <Link \n                    className=\"entities__link\"\n                    to={`/categories/${currentPath}/${nameForRoute || titleForRoute}`}\n                  >\n                    {item.name || item.title}\n                  </Link>\n                </li>\n              )\n            })}\n          </ul>\n        </>\n        )}\n        <EntityInfo categoryList={categoryList} />\n    </div>\n  );\n} ","import { StarwarsTypes } from '../../interfaces';\n\nexport function filterList(people: StarwarsTypes[], query: string, path: string) {\n  const pattern = new RegExp(`${query}`, 'gi');\n\n  switch (path) {\n    case 'People':\n    case 'Species':\n    case 'Planets':\n      return people.filter(entity => pattern.test(entity.name));\n    case 'Films':\n      return people.filter(entity => pattern.test(entity.title));\n    case 'Starships':\n    case 'Vehicles':\n      return people.filter(entity => pattern.test(entity.name) || pattern.test(entity.model));\n    default:\n      return people;\n  }\n}\n\nexport function sortList(list: StarwarsTypes[], querySortOrder: string, path: string) {\n  if (querySortOrder === 'sorted') {\n    switch (path) {\n      case 'People':\n      case 'Species':\n      case 'Planets':\n      case 'Starships':\n      case 'Vehicles':\n        return list\n          .sort(\n            (entityA, entityB) => entityA.name.localeCompare(entityB.name),\n          );\n      case 'Films':\n        return list\n        .sort(\n          (entityA, entityB) => entityA.title.localeCompare(entityB.title),\n        );\n      default:\n        return list;\n    }\n  }\n\n    return list;\n}\n\nexport function reverseList(sortedList: StarwarsTypes[], querySortOrder: string) {\n  if (querySortOrder === 'reverse') {\n    return sortedList.reverse();\n  }\n\n  return sortedList;\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from '../../api/api';\nimport { StarwarsTypes } from '../../interfaces';\nimport { Input } from '../Input/Input';\nimport { EntitiesList } from '../EntitiesList/EntitiesList';\n\nimport './Content.css';\n\nexport const Content: FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [currentTitle, setCurrentTitle] = useState<string>('');\n  const [categoryContent, setCategoryContent] = useState<StarwarsTypes[]>([]);\n  let { title } = useParams();\n\n  const titleAdaptive = title && title.toLowerCase();\n\n  if (currentTitle !== titleAdaptive) {\n    setCurrentTitle(titleAdaptive)\n  }\n\n  const fetchData = async (titleToGet: string) => {\n    setIsLoading(true)\n    const peopleFromServer: StarwarsTypes[] = await getData(titleToGet);\n    setCategoryContent(peopleFromServer);\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n\n    fetchData(currentTitle);\n\n  }, [currentTitle]);\n\n  return (\n    <div className=\"content\">\n      <Input />\n      <EntitiesList categoryList={categoryContent} isLoading={isLoading} />\n    </div>\n  );\n} ","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { uuid } from 'uuidv4';\nimport { categoriesData } from './CategoriesListData';\nimport { Content } from '../Content/Content';\n\nexport const CategoriesList: FC = () => (\n  <>\n  <header className=\"center\">\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n        <ul className=\"navbar-nav mr-auto\">\n          {categoriesData.map(category => (\n          <li className=\"nav-item\" key={uuid()}>\n            <NavLink \n              className=\"nav-link\" \n              to={`/categories/${category.title}`} \n              exact\n            > \n              {category.title} \n            </NavLink>\n          </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  </header>\n  <Content />\n  </>\n);\n","import React, { FC } from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Home } from './components/Home/Home';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { CategoriesList } from './components/CategoriesList/CategoriesList';\n\nconst App: FC = () => (\n  <>\n    <div className=\"App\">\n      <Header />\n    </div>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route exact path=\"/home\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route\n        path=\"/categories/:title?/:entity?\"\n        component={CategoriesList}\n      />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'),\n);\n"],"sourceRoot":""}